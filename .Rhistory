nm <- paste(i,Name,sep="_")
Opentime <- as.POSIXct("2000-01-01 09:30:00", tz = "EST")
Opentime <-strftime(Opentime, format="%H:%M:%S")
Closetime <- as.POSIXct("2000-01-01 16:00:00", tz = "EST")
Closetime <-strftime(Closetime, format="%H:%M:%S")
row_to_keep <- logical(length = nrow(env[[nm]]) )
maxrow <- nrow(env[[nm]])
env[[nm]] = env[[nm]][complete.cases(env[[nm]][1:maxrow,] ) ,]
for (j in 1:nrow(env[[nm]])){
temp <- strftime(env[[nm]][j,1], format="%H:%M:%S")
if ( temp >= Opentime && temp <= Closetime){
row_to_keep[j] <- TRUE
} else{
row_to_keep[j] <- FALSE
}
}
env[[nm]] = env[[nm]][row_to_keep,]
assign(paste(i,Name,sep="_"), env[[nm]])
}
}
i <- 1
name <- 1
for (i in Stocks){
for (name in EquityList){
nm <- paste(i,Name,sep="_")
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "15:59:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
testy <- testy[,9:15]
na_rows <- rownames(subset(testy,is.na(testy$OPEN.y)))
for (rw in na_rows){
rw <- as.integer(rw)
testy[rw,1:4] <- testy[rw-1,1:4]
}
testy[is.na(testy)] <- 0
new_data_final <- cbind(dates_list, testy)
env[[nm]] <- new_data_final
colnames(env[[nm]]) <- col_nms
}
}
View(AC_tick)
nm
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "15:59:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
View(testy)
nrow(env[[nm]])
tail(env[["AC_tick"]])
source('constants.r')
init_cash = 100000
#global_variables: position matrices, trade matrices, ourdata, order book
#order format: msgtype, symbol, price, quantity, side, ordtype, orderID, time
#execution message format: orderID, Execstatus, symbol, quantity, avg price, side, time
#Execstatus can be the following: filled, replaced, cancelled, replacereject?, cancelreject
#order book format: orderID, time, symbol, price, quantity, side, ordtype
#trade matrix format: time, symbol, side, quantity, price, open/close, pnl
#position matrix: time, asset, #of shares, book value, market value,
datafile_name = "../data/TSXdatafile.xls"
global_tables = new.env()
global_tables[[Con_GlobalVarName_LOB]]<- data.frame(matrix(0, 0, length(orderbook_spec)))
colnames(global_tables[[Con_GlobalVarName_LOB]]) <- orderbook_spec
#the position book is a list of data frames
init_pos <- data.frame(matrix(0, 1, length(positionbook_spec)))
colnames(init_pos) <- positionbook_spec
init_pos[,Con_FieldName_Sym] = Con_Sym_Cash
init_pos[,c(Con_FieldName_Qty, Con_FieldName_BookVal, Con_FieldName_MktVal)] = init_cash
global_tables[[Con_GlobalVarName_PositionBook]] <- list(init_pos)
names(global_tables[[Con_GlobalVarName_PositionBook]])[1] = 0
global_tables[[Con_GlobalVarName_TradesBook]] <- data.frame(matrix(0, 0, length(tradesbook_spec)))
colnames(global_tables[[Con_GlobalVarName_TradesBook]]) <- tradesbook_spec
env <- global_tables
env[["AC_ask"]] <- read.csv("AC_ask.csv")
env[["AC_ask"]]$Date <- as.POSIXct(env[["AC_ask"]]$Date)
env[["AC_bid"]] <- read.csv("AC_bid.csv")
env[["AC_bid"]]$Date <- as.POSIXct(env[["AC_bid"]]$Date)
env[["AC_tick"]] <- read.csv("AC_tick.csv")
env[["AC_tick"]]$Date <- as.POSIXct(env[["AC_tick"]]$Date)
env[["BNS_ask"]] <- read.csv("BNS_ask.csv")
env[["BNS_ask"]]$Date <- as.POSIXct(env[["BNS_ask"]]$Date)
env[["BNS_bid"]] <- read.csv("BNS_bid.csv")
env[["BNS_bid"]]$Date <- as.POSIXct(env[["BNS_bid"]]$Date)
env[["BNS_tick"]] <- read.csv("BNS_tick.csv")
env[["BNS_tick"]]$Date <- as.POSIXct(env[["BNS_tick"]]$Date)
env[["BMO_ask"]] <- read.csv("BMO_ask.csv")
env[["BMO_ask"]]$Date <- as.POSIXct(env[["BMO_ask"]]$Date)
env[["BMO_bid"]] <- read.csv("BMO_bid.csv")
env[["BMO_bid"]]$Date <- as.POSIXct(env[["BMO_bid"]]$Date)
env[["BMO_tick"]] <- read.csv("BMO_tick.csv")
env[["BMO_tick"]]$Date <- as.POSIXct(env[["BMO_tick"]]$Date)
Stocks <- c("AC", "BNS", "BMO")
EquityList <- c("tick", "ask", "bid")
for (i in Stocks){
for (Name in EquityList){
nm <- paste(i,Name,sep="_")
Opentime <- as.POSIXct("2000-01-01 09:30:00", tz = "EST")
Opentime <-strftime(Opentime, format="%H:%M:%S")
Closetime <- as.POSIXct("2000-01-01 16:00:00", tz = "EST")
Closetime <-strftime(Closetime, format="%H:%M:%S")
row_to_keep <- logical(length = nrow(env[[nm]]) )
maxrow <- nrow(env[[nm]])
env[[nm]] = env[[nm]][complete.cases(env[[nm]][1:maxrow,] ) ,]
for (j in 1:nrow(env[[nm]])){
temp <- strftime(env[[nm]][j,1], format="%H:%M:%S")
if ( temp >= Opentime && temp <= Closetime){
row_to_keep[j] <- TRUE
} else{
row_to_keep[j] <- FALSE
}
}
env[[nm]] = env[[nm]][row_to_keep,]
assign(paste(i,Name,sep="_"), env[[nm]])
}
}
i <- 1
name <- 1
View(BMO_bid)
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(BMO_bid[, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "15:59:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
cmpr <- cbind(BMO_bid[,1], list_times_vec)
rownames(BMO_bid) <- 1:nrow(BMO_bid)
write.csv(BMO_bid, file = "BMO_bid_check.csv")
write.csv(list_times_vec, file = "dates_check.csv")
i <- 1
name <- 1
for (i in Stocks){
for (name in EquityList){
nm <- paste(i,Name,sep="_")
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "15:59:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
testy <- testy[,9:15]
na_rows <- rownames(subset(testy,is.na(testy$OPEN.y)))
for (rw in na_rows){
rw <- as.integer(rw)
testy[rw,1:4] <- testy[rw-1,1:4]
}
testy[is.na(testy)] <- 0
new_data_final <- cbind(dates_list, testy)
env[[nm]] <- new_data_final
colnames(env[[nm]]) <- col_nms
}
}
env[["AC_ask"]] <- read.csv("AC_ask.csv")
env[["AC_ask"]]$Date <- as.POSIXct(env[["AC_ask"]]$Date)
env[["AC_bid"]] <- read.csv("AC_bid.csv")
env[["AC_bid"]]$Date <- as.POSIXct(env[["AC_bid"]]$Date)
env[["AC_tick"]] <- read.csv("AC_tick.csv")
env[["AC_tick"]]$Date <- as.POSIXct(env[["AC_tick"]]$Date)
env[["BNS_ask"]] <- read.csv("BNS_ask.csv")
env[["BNS_ask"]]$Date <- as.POSIXct(env[["BNS_ask"]]$Date)
env[["BNS_bid"]] <- read.csv("BNS_bid.csv")
env[["BNS_bid"]]$Date <- as.POSIXct(env[["BNS_bid"]]$Date)
env[["BNS_tick"]] <- read.csv("BNS_tick.csv")
env[["BNS_tick"]]$Date <- as.POSIXct(env[["BNS_tick"]]$Date)
env[["BMO_ask"]] <- read.csv("BMO_ask.csv")
env[["BMO_ask"]]$Date <- as.POSIXct(env[["BMO_ask"]]$Date)
env[["BMO_bid"]] <- read.csv("BMO_bid.csv")
env[["BMO_bid"]]$Date <- as.POSIXct(env[["BMO_bid"]]$Date)
env[["BMO_tick"]] <- read.csv("BMO_tick.csv")
env[["BMO_tick"]]$Date <- as.POSIXct(env[["BMO_tick"]]$Date)
Stocks <- c("AC", "BNS", "BMO")
EquityList <- c("tick", "ask", "bid")
source('constants.r')
init_cash = 100000
#global_variables: position matrices, trade matrices, ourdata, order book
#order format: msgtype, symbol, price, quantity, side, ordtype, orderID, time
#execution message format: orderID, Execstatus, symbol, quantity, avg price, side, time
#Execstatus can be the following: filled, replaced, cancelled, replacereject?, cancelreject
#order book format: orderID, time, symbol, price, quantity, side, ordtype
#trade matrix format: time, symbol, side, quantity, price, open/close, pnl
#position matrix: time, asset, #of shares, book value, market value,
datafile_name = "../data/TSXdatafile.xls"
global_tables = new.env()
global_tables[[Con_GlobalVarName_LOB]]<- data.frame(matrix(0, 0, length(orderbook_spec)))
colnames(global_tables[[Con_GlobalVarName_LOB]]) <- orderbook_spec
#the position book is a list of data frames
init_pos <- data.frame(matrix(0, 1, length(positionbook_spec)))
colnames(init_pos) <- positionbook_spec
init_pos[,Con_FieldName_Sym] = Con_Sym_Cash
init_pos[,c(Con_FieldName_Qty, Con_FieldName_BookVal, Con_FieldName_MktVal)] = init_cash
global_tables[[Con_GlobalVarName_PositionBook]] <- list(init_pos)
names(global_tables[[Con_GlobalVarName_PositionBook]])[1] = 0
global_tables[[Con_GlobalVarName_TradesBook]] <- data.frame(matrix(0, 0, length(tradesbook_spec)))
colnames(global_tables[[Con_GlobalVarName_TradesBook]]) <- tradesbook_spec
<<<<<<< HEAD
global_tables[[Con_GlobalVarName_MktPrice]] <- list(vector())
global_tables[[Con_GlobalVarName_BidPrice]] <- list(vector())
global_tables[[Con_GlobalVarName_AskPrice]] <- list(vector())
env <- global_tables
env[["AC_ask"]] <- read.csv("AC_ask.csv")
env[["AC_ask"]]$Date <- as.POSIXct(env[["AC_ask"]]$Date)
env[["AC_bid"]] <- read.csv("AC_bid.csv")
env[["AC_bid"]]$Date <- as.POSIXct(env[["AC_bid"]]$Date)
env[["AC_tick"]] <- read.csv("AC_tick.csv")
env[["AC_tick"]]$Date <- as.POSIXct(env[["AC_tick"]]$Date)
env[["BNS_ask"]] <- read.csv("BNS_ask.csv")
env[["BNS_ask"]]$Date <- as.POSIXct(env[["BNS_ask"]]$Date)
env[["BNS_bid"]] <- read.csv("BNS_bid.csv")
env[["BNS_bid"]]$Date <- as.POSIXct(env[["BNS_bid"]]$Date)
env[["BNS_tick"]] <- read.csv("BNS_tick.csv")
env[["BNS_tick"]]$Date <- as.POSIXct(env[["BNS_tick"]]$Date)
env[["BMO_ask"]] <- read.csv("BMO_ask.csv")
env[["BMO_ask"]]$Date <- as.POSIXct(env[["BMO_ask"]]$Date)
env[["BMO_bid"]] <- read.csv("BMO_bid.csv")
env[["BMO_bid"]]$Date <- as.POSIXct(env[["BMO_bid"]]$Date)
env[["BMO_tick"]] <- read.csv("BMO_tick.csv")
env[["BMO_tick"]]$Date <- as.POSIXct(env[["BMO_tick"]]$Date)
Stocks <- c("AC", "BNS", "BMO")
EquityList <- c("tick", "ask", "bid")
# removes N/A fields and only keeps times when the market is open
for (i in Stocks){
for (Name in EquityList){
nm <- paste(i,Name,sep="_")
Opentime <- as.POSIXct("2000-01-01 09:30:00", tz = "EST")
Opentime <-strftime(Opentime, format="%H:%M:%S")
Closetime <- as.POSIXct("2000-01-01 16:00:00", tz = "EST")
Closetime <-strftime(Closetime, format="%H:%M:%S")
row_to_keep <- logical(length = nrow(env[[nm]]) )
maxrow <- nrow(env[[nm]])
env[[nm]] = env[[nm]][complete.cases(env[[nm]][1:maxrow,] ) ,]
for (j in 1:nrow(env[[nm]])){
temp <- strftime(env[[nm]][j,1], format="%H:%M:%S")
if ( temp >= Opentime && temp <= Closetime){
row_to_keep[j] <- TRUE
} else{
row_to_keep[j] <- FALSE
}
}
env[[nm]] = env[[nm]][row_to_keep,]
}
}
i <- 1
name <- 1
for (i in Stocks){
for (name in EquityList){
nm <- paste(i,Name,sep="_")
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "16:00:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
testy <- testy[,9:15]
na_rows <- rownames(subset(testy,is.na(testy$OPEN.y)))
for (rw in na_rows){
rw <- as.integer(rw)
testy[rw,1:4] <- testy[rw-1,1:4]
}
testy[is.na(testy)] <- 0
new_data_final <- cbind(dates_list, testy)
env[[nm]] <- new_data_final
colnames(env[[nm]]) <- col_nms
}
}
NM
nm
View(new_data_final)
col_nms
i
source('constants.r')
init_cash = 100000
#global_variables: position matrices, trade matrices, ourdata, order book
#order format: msgtype, symbol, price, quantity, side, ordtype, orderID, time
#execution message format: orderID, Execstatus, symbol, quantity, avg price, side, time
#Execstatus can be the following: filled, replaced, cancelled, replacereject?, cancelreject
#order book format: orderID, time, symbol, price, quantity, side, ordtype
#trade matrix format: time, symbol, side, quantity, price, open/close, pnl
#position matrix: time, asset, #of shares, book value, market value,
datafile_name = "../data/TSXdatafile.xls"
global_tables = new.env()
global_tables[[Con_GlobalVarName_LOB]]<- data.frame(matrix(0, 0, length(orderbook_spec)))
colnames(global_tables[[Con_GlobalVarName_LOB]]) <- orderbook_spec
#the position book is a list of data frames
init_pos <- data.frame(matrix(0, 1, length(positionbook_spec)))
colnames(init_pos) <- positionbook_spec
init_pos[,Con_FieldName_Sym] = Con_Sym_Cash
init_pos[,c(Con_FieldName_Qty, Con_FieldName_BookVal, Con_FieldName_MktVal)] = init_cash
global_tables[[Con_GlobalVarName_PositionBook]] <- list(init_pos)
names(global_tables[[Con_GlobalVarName_PositionBook]])[1] = 0
global_tables[[Con_GlobalVarName_TradesBook]] <- data.frame(matrix(0, 0, length(tradesbook_spec)))
colnames(global_tables[[Con_GlobalVarName_TradesBook]]) <- tradesbook_spec
<<<<<<< HEAD
global_tables[[Con_GlobalVarName_MktPrice]] <- list(vector())
global_tables[[Con_GlobalVarName_BidPrice]] <- list(vector())
global_tables[[Con_GlobalVarName_AskPrice]] <- list(vector())
env <- global_tables
env[["AC_ask"]] <- read.csv("AC_ask.csv")
env[["AC_ask"]]$Date <- as.POSIXct(env[["AC_ask"]]$Date)
env[["AC_bid"]] <- read.csv("AC_bid.csv")
env[["AC_bid"]]$Date <- as.POSIXct(env[["AC_bid"]]$Date)
env[["AC_tick"]] <- read.csv("AC_tick.csv")
env[["AC_tick"]]$Date <- as.POSIXct(env[["AC_tick"]]$Date)
env[["BNS_ask"]] <- read.csv("BNS_ask.csv")
env[["BNS_ask"]]$Date <- as.POSIXct(env[["BNS_ask"]]$Date)
env[["BNS_bid"]] <- read.csv("BNS_bid.csv")
env[["BNS_bid"]]$Date <- as.POSIXct(env[["BNS_bid"]]$Date)
env[["BNS_tick"]] <- read.csv("BNS_tick.csv")
env[["BNS_tick"]]$Date <- as.POSIXct(env[["BNS_tick"]]$Date)
env[["BMO_ask"]] <- read.csv("BMO_ask.csv")
env[["BMO_ask"]]$Date <- as.POSIXct(env[["BMO_ask"]]$Date)
env[["BMO_bid"]] <- read.csv("BMO_bid.csv")
env[["BMO_bid"]]$Date <- as.POSIXct(env[["BMO_bid"]]$Date)
env[["BMO_tick"]] <- read.csv("BMO_tick.csv")
env[["BMO_tick"]]$Date <- as.POSIXct(env[["BMO_tick"]]$Date)
Stocks <- c("AC", "BNS", "BMO")
EquityList <- c("tick", "ask", "bid")
# removes N/A fields and only keeps times when the market is open
for (i in Stocks){
for (Name in EquityList){
nm <- paste(i,Name,sep="_")
Opentime <- as.POSIXct("2000-01-01 09:30:00", tz = "EST")
Opentime <-strftime(Opentime, format="%H:%M:%S")
Closetime <- as.POSIXct("2000-01-01 16:00:00", tz = "EST")
Closetime <-strftime(Closetime, format="%H:%M:%S")
row_to_keep <- logical(length = nrow(env[[nm]]) )
maxrow <- nrow(env[[nm]])
env[[nm]] = env[[nm]][complete.cases(env[[nm]][1:maxrow,] ) ,]
for (j in 1:nrow(env[[nm]])){
temp <- strftime(env[[nm]][j,1], format="%H:%M:%S")
if ( temp >= Opentime && temp <= Closetime){
row_to_keep[j] <- TRUE
} else{
row_to_keep[j] <- FALSE
}
}
env[[nm]] = env[[nm]][row_to_keep,]
}
}
i
i <- 1
name <- 1
for (i in Stocks){
for (name in EquityList){
nm <- paste(i,Name,sep="_")
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "16:00:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
testy <- testy[,9:15]
na_rows <- rownames(subset(testy,is.na(testy$OPEN.y)))
for (rw in na_rows){
rw <- as.integer(rw)
testy[rw,1:4] <- testy[rw-1,1:4]
}
testy[is.na(testy)] <- 0
new_data_final <- cbind(dates_list, testy)
env[[nm]] <- new_data_final
colnames(env[[nm]]) <- col_nms
}
}
nm
i
Stocks
for (i in Stocks){
for (name in EquityList){
nm <- paste(i,name,sep="_")
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, 1])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "16:00:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
testy <- testy[,9:15]
na_rows <- rownames(subset(testy,is.na(testy$OPEN.y)))
for (rw in na_rows){
rw <- as.integer(rw)
testy[rw,1:4] <- testy[rw-1,1:4]
}
testy[is.na(testy)] <- 0
new_data_final <- cbind(dates_list, testy)
env[[nm]] <- new_data_final
colnames(env[[nm]]) <- col_nms
}
}
i
env[["AC_ask"]] <- read.csv("AC_ask.csv")
env[["AC_ask"]]$Date <- as.POSIXct(env[["AC_ask"]]$Date)
env[["AC_bid"]] <- read.csv("AC_bid.csv")
env[["AC_bid"]]$Date <- as.POSIXct(env[["AC_bid"]]$Date)
env[["AC_tick"]] <- read.csv("AC_tick.csv")
env[["AC_tick"]]$Date <- as.POSIXct(env[["AC_tick"]]$Date)
env[["BNS_ask"]] <- read.csv("BNS_ask.csv")
env[["BNS_ask"]]$Date <- as.POSIXct(env[["BNS_ask"]]$Date)
env[["BNS_bid"]] <- read.csv("BNS_bid.csv")
env[["BNS_bid"]]$Date <- as.POSIXct(env[["BNS_bid"]]$Date)
env[["BNS_tick"]] <- read.csv("BNS_tick.csv")
env[["BNS_tick"]]$Date <- as.POSIXct(env[["BNS_tick"]]$Date)
env[["BMO_ask"]] <- read.csv("BMO_ask.csv")
env[["BMO_ask"]]$Date <- as.POSIXct(env[["BMO_ask"]]$Date)
env[["BMO_bid"]] <- read.csv("BMO_bid.csv")
env[["BMO_bid"]]$Date <- as.POSIXct(env[["BMO_bid"]]$Date)
env[["BMO_tick"]] <- read.csv("BMO_tick.csv")
env[["BMO_tick"]]$Date <- as.POSIXct(env[["BMO_tick"]]$Date)
Stocks <- c("AC", "BNS", "BMO")
EquityList <- c("tick", "ask", "bid")
# removes N/A fields and only keeps times when the market is open
for (i in Stocks){
for (Name in EquityList){
nm <- paste(i,Name,sep="_")
Opentime <- as.POSIXct("2000-01-01 09:30:00", tz = "EST")
Opentime <-strftime(Opentime, format="%H:%M:%S")
Closetime <- as.POSIXct("2000-01-01 16:00:00", tz = "EST")
Closetime <-strftime(Closetime, format="%H:%M:%S")
row_to_keep <- logical(length = nrow(env[[nm]]) )
maxrow <- nrow(env[[nm]])
env[[nm]] = env[[nm]][complete.cases(env[[nm]][1:maxrow,] ) ,]
for (j in 1:nrow(env[[nm]])){
temp <- strftime(env[[nm]][j,1], format="%H:%M:%S")
if ( temp >= Opentime && temp <= Closetime){
row_to_keep[j] <- TRUE
} else{
row_to_keep[j] <- FALSE
}
}
env[[nm]] = env[[nm]][row_to_keep,]
}
}
for (stock in Stocks){
for (name in EquityList){
nm <- paste(stock,name,sep="_")
col_nms <- colnames(env[[nm]])
list_times_vec <- data.frame()
list_dates <- as.data.frame(unique(as.Date(env[[nm]][, "Date"])))
for (i in 1:nrow(list_dates)){
st <- as.POSIXct(paste(list_dates[i,1], "09:30:00"), origin = "1970-01-01")
en <- as.POSIXct(paste(list_dates[i,1], "16:00:00"), origin = "1970-01-01")
list_times_vec <- rbind(list_times_vec, data.frame(seq(from = st, to = en, by = "min")))
}
dates_list <- list_times_vec
mtrix <- matrix(0, nrow(list_times_vec), (ncol(env[[nm]])-1))
list_times_vec <- cbind(list_times_vec, mtrix)
colnames(list_times_vec) <- col_nms
testy <- merge(list_times_vec, env[[nm]], by = "Date", all = TRUE)
testy <- testy[,9:15]
na_rows <- rownames(subset(testy,is.na(testy$OPEN.y)))
for (rw in na_rows){
rw <- as.integer(rw)
testy[rw,1:4] <- testy[rw-1,1:4]
}
testy[is.na(testy)] <- 0
new_data_final <- cbind(dates_list, testy)
env[[nm]] <- new_data_final
colnames(env[[nm]]) <- col_nms
}
}
for (stock in Stocks){
for (name in EquityList){
stock_data <- paste(stock,name,sep="_")
assign(paste(stock,name,sep="_"), global_tables[[stock_data]])
}
}
View(AC_ask)
View(AC_tick)
View(BMO_ask)
