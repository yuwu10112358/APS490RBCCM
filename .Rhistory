test = c(1, 2, 3, 4)
test[test > 5]
rrr = test[test > 5]
test2 = c("abc", 1)
test3 = 6
5 * (test3 == 6) + 4 * (test3 != 6)
test3 = 5
5 * (test3 == 6) + 4 * (test3 != 6)
rrr = test[test > 2]
test[test > 2][1]
insert_into_tradesbook <- function(tradesbook, time, sym, qty, side, price, openclose, pnl){
}
handle_cancels <- function(cancelorders, orderbook){
#returns execution messages
}
handle_cancels(1, 2)
handle_cancels(1, 2)
cat(handle_cancels(1, 2))
handle_cancels(1, 2)
handle_cancels(1, 2)
handle_cancels <- function(cancelorders, orderbook){
#returns execution messages
cat(cancelorders)
}
handle_cancels(1, 2)
handle_cancels(orderbook = 2, cancelorders = 1)
1.334^2
exp(-1.334^2) / sqrt(2*pi)
exp(-1.334^2/2) / sqrt(2*pi)
exp(-1.334^2/2) / sqrt(2*pi) / 45 / 0.15 / 0.5
5 * 0.04855239
exp(-0.8931^2/2) / sqrt(2*pi) / 45 / 0.15 / sqrt(0.5)
5 * 0.04855239 / 0.05609429
4.32775 * 0.8141 - 5 * 0.9089
source('~/APS490/APS490RBCCM/main.r', echo=TRUE)
setwd("~/APS490/APS490RBCCM")
source('~/APS490/APS490RBCCM/main.r', echo=TRUE)
test1 <- c(1, 2, 3, 4, 5)
test1 > 3
(test1 > 3)[1]
(test1[test1 > 3])[1]
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
head(p_increments)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
sum(is.na(p_increments_training))
p_increments_training[is.na(p_increments_training)]
sum(volume_training == 0)
is.na(p_increments_training)
p_increments[8,]
VWAP[8,]
volume[8,]
interval_volume[8,]
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
p_increment_list <- matrix(NA, 0, Tnum)
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
mu
p_increment
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test1 = 2
test1[,1]
test1 = c(1,2)
test1[,1]
nrow(test1)
dim(test1) <- c(1, length(test1))
nrow(test1)
test1[,1]
dim(test1) <- length(test1)
nrow(test1)
source('hmm.r')
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
p_increment
p_increment - mu
mu
dim(mu)
matrix(p_increment[,1], nrow = num_states, ncol = dim(p_increment)[1], byrow = TRUE)
matrix(p_increment[,1], nrow = num_states, ncol = dim(p_increment)[1], byrow = TRUE) - mu
matrix(p_increment[,1], nrow = num_states, ncol = dim(p_increment)[1], byrow = TRUE) - t(mu)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
mu
A
matrix(A, num_states, num_states)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
dim(log_alpha)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
log_alpha
sigma_mu
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
log_alpha
alpha
states_prob
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
expected_mu
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
log_alpha[, t-1, ]
dim(log_alpha[, t-1, ])
matrix(log_alpha[, t-1, ], nrow = num_states, ncol = N)
apply(matrix(log_alpha[, t-1, ], nrow = num_states, ncol = N), 2, max)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('hmm.r')
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
log_alpha[, t-1, ]
matrix(log_alpha[, t-1, ], nrow = num_states, ncol = N)
source('hmm.r')
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
log_alpha[, t-1, ]
matrix(log_alpha[, t-1, ], nrow = num_states, ncol = N)
source('hmm.r')
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
mu
predicted_price_direction
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
prediction_list
test_HMMM(global_tables, 'BNS', 5, 4)
prediction_list
current_time
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
source('strategy_hmm.r')
test_HMMM(global_tables, 'BNS', 5, 4)
test_HMMM(global_tables, 'BNS', 5, 4)
